<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HQP</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-30T12:40:09.604Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Huangqiuping</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Boot个人博客</title>
    <link href="http://yoursite.com/2019/09/23/my-fisrt-post/"/>
    <id>http://yoursite.com/2019/09/23/my-fisrt-post/</id>
    <published>2019-09-23T06:20:34.960Z</published>
    <updated>2019-09-30T12:40:09.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Boot开发小而美的个人博客"><a href="#Spring-Boot开发小而美的个人博客" class="headerlink" title="Spring Boot开发小而美的个人博客"></a>Spring Boot开发小而美的个人博客</h1><p>作者：黄秋平<br>GitHub：<a href="https://github.com/AYJCSGM/spring-boot-blog" target="_blank" rel="noopener">https://github.com/AYJCSGM/spring-boot-blog</a></p><p><strong>个人博客功能：</strong></p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fk7m27hbn4j31ds0ycdnp.jpg" alt></p><p><strong>技术组合：</strong></p><ul><li>后端：Spring Boot + JPA + thymeleaf模板</li><li>数据库：MySQL</li><li>前端UI：Semantic UI框架</li></ul><p><strong>工具与环境：</strong></p><ul><li>IDEA</li><li>Maven 3</li><li>JDK 8</li><li>Axure RP 8</li></ul><p><strong>课程内容模块：</strong></p><ul><li>需求分析与功能规划</li><li>页面设计与开发</li><li>技术框架搭建</li><li>后端管理功能实现</li><li>前端管理功能实现</li></ul><p><strong>你能学得什么？</strong></p><ul><li>基于Spring Boot的完整全栈式的开发套路</li><li>Semantic UI框架的使用</li><li>一套博客系统的源代码与设计</li></ul><h2 id="1、需求与功能"><a href="#1、需求与功能" class="headerlink" title="1、需求与功能"></a>1、需求与功能</h2><h3 id="1-1-用户故事"><a href="#1-1-用户故事" class="headerlink" title="1.1 用户故事"></a>1.1 用户故事</h3><p>用户故事是敏捷框架中的一种开发方法。可以帮助开发者转换视角，以用户的角度更好的把握需求，从而实现具有商业价值的功能。</p><blockquote><p> 用户故事最好是用户团队编写</p></blockquote><p><strong>用户故事模板</strong>：</p><ul><li>As a (role of user), I want (some feature) so that (some business value).</li><li>作为一个(某个角色) 使用者，我可以做(某个功能) 事情，如此可以有(某个商业价值) 的好处</li></ul><p><strong>关键点</strong>：角色、功能、商业价值</p><p><strong>举例</strong>：</p><ul><li>作为一个招聘网站<strong>注册用户</strong>，我想<strong>查看最近3天发布的招聘信息</strong>，以便于<strong>了解最新的招聘信息</strong>。</li><li>作为公司，可以张贴新工作。</li></ul><p>个人博客系统的用户故事：</p><p>角色：<strong>普通访客</strong>，<strong>管理员（我）</strong></p><ul><li>访客，可以分页查看所有的博客</li><li>访客，可以快速查看博客数最多的6个分类</li><li>访客，可以查看所有的分类</li><li>访客，可以查看某个分类下的博客列表</li><li>访客，可以快速查看标记博客最多的10个标签</li><li>访客，可以查看所有的标签</li><li>访客，可以查看某个标签下的博客列表</li><li>访客，可以根据年度时间线查看博客列表</li><li>访客，可以快速查看最新的推荐博客</li><li>访客，可以用关键字全局搜索博客</li><li>访客，可以查看单个博客内容</li><li>访客，可以对博客内容进行评论</li><li>访客，可以赞赏博客内容</li><li>访客，可以微信扫码阅读博客内容</li><li>访客，可以在首页扫描公众号二维码关注我</li><li>我，可以用户名和密码登录后台管理</li><li>我，可以管理博客<ul><li>我，可以发布新博客</li><li>我，可以对博客进行分类</li><li>我，可以对博客打标签</li><li>我，可以修改博客</li><li>我，可以删除博客</li><li>我，可以根据标题，分类，标签查询博客</li></ul></li><li>我，可以管理博客分类<ul><li>我，可以新增一个分类</li><li>我，可以修改一个分类</li><li>我，可以删除一个分类</li><li>我，可以根据分类名称查询分类</li></ul></li><li>我，可以管理标签<ul><li>我，可以新增一个标签</li><li>我，可以修改一个标签</li><li>我，可以删除一个标签</li><li>我，可以根据名称查询标签</li></ul></li></ul><h3 id="1-2-功能规划"><a href="#1-2-功能规划" class="headerlink" title="1.2 功能规划"></a>1.2 功能规划</h3><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fk7m27hbn4j31ds0ycdnp.jpg" alt></p><h2 id="2、页面设计与开发"><a href="#2、页面设计与开发" class="headerlink" title="2、页面设计与开发"></a>2、页面设计与开发</h2><h3 id="2-1-设计"><a href="#2-1-设计" class="headerlink" title="2.1 设计"></a>2.1 设计</h3><p><strong>页面规划：</strong></p><p>前端展示：首页、详情页、分类、标签、归档、关于我</p><p>后台管理：模板页</p><h3 id="2-2-页面开发"><a href="#2-2-页面开发" class="headerlink" title="2.2 页面开发"></a>2.2 页面开发</h3><p><a href="https://semantic-ui.com/" target="_blank" rel="noopener">Semantic UI官网</a></p><p><a href="http://www.semantic-ui.cn/" target="_blank" rel="noopener">Semantic UI中文官网</a></p><p><a href="https://imcoding.me/blogs/5" target="_blank" rel="noopener">WebStorm下载与破解</a></p><p><a href="https://www.toptal.com/designers/subtlepatterns/" target="_blank" rel="noopener">背景图片资源</a></p><h3 id="2-3-插件集成"><a href="#2-3-插件集成" class="headerlink" title="2.3 插件集成"></a>2.3 插件集成</h3><p><a href="https://pandao.github.io/editor.md/" target="_blank" rel="noopener">编辑器 Markdown</a></p><p><a href="https://github.com/sofish/typo.css" target="_blank" rel="noopener">内容排版 typo.css</a></p><p><a href="https://daneden.github.io/animate.css/" target="_blank" rel="noopener">动画 animate.css</a></p><p><a href="https://github.com/PrismJS/prism" target="_blank" rel="noopener">代码高亮 prism</a></p><p><a href="https://tscanlin.github.io/tocbot/" target="_blank" rel="noopener">目录生成 Tocbot</a></p><p><a href="http://imakewebthings.com/waypoints/" target="_blank" rel="noopener">滚动侦测 waypoints</a></p><p><a href="https://github.com/flesler/jquery.scrollTo" target="_blank" rel="noopener">平滑滚动 jquery.scrollTo</a></p><p><a href="https://davidshimjs.github.io/qrcodejs/" target="_blank" rel="noopener">二维码生成 qrcode.js</a></p><h2 id="3、框架搭建"><a href="#3、框架搭建" class="headerlink" title="3、框架搭建"></a>3、框架搭建</h2><blockquote><p> <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">IDEA下载 https://www.jetbrains.com/idea/</a></p></blockquote><h3 id="3-1-构建与配置"><a href="#3-1-构建与配置" class="headerlink" title="3.1 构建与配置"></a>3.1 构建与配置</h3><p><strong>1、引入Spring Boot模块：</strong></p><ul><li>web</li><li>Thymeleaf</li><li>JPA</li><li>MySQL</li><li>Aspects</li><li>DevTools</li></ul><p><strong>2、application.yml配置</strong></p><ul><li><p>使用 thymeleaf 3</p><p>pom.xml:</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">thymeleaf.version</span>&gt;</span>3.0.2.RELEASE<span class="tag">&lt;/<span class="name">thymeleaf.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span></span><br></pre></td></tr></table></figure><pre><code>application.yml:</code></pre><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  thymeleaf:</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">HTML</span></span><br></pre></td></tr></table></figure><ul><li>数据库连接配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://localhost:3306/blog?useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  jpa:</span></span><br><span class="line"><span class="attr">    hibernate:</span></span><br><span class="line"><span class="attr">      ddl-auto:</span> <span class="string">update</span></span><br><span class="line"><span class="attr">    show-sql:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li><p>日志配置</p><p>application.yml:</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line"><span class="attr">    root:</span> <span class="string">info</span></span><br><span class="line">    <span class="string">com.imcoding:</span> <span class="string">debug</span></span><br><span class="line"><span class="attr">  file:</span> <span class="string">log/imcoding.log</span></span><br></pre></td></tr></table></figure><p>​    logback-spring.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--包含Spring boot对logback日志的默认配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">resource</span>=<span class="string">"org/springframework/boot/logging/logback/defaults.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LOG_FILE"</span> <span class="attr">value</span>=<span class="string">"$&#123;LOG_FILE:-$&#123;LOG_PATH:-$&#123;LOG_TEMP:-$&#123;java.io.tmpdir:-/tmp&#125;&#125;&#125;/spring.log&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">resource</span>=<span class="string">"org/springframework/boot/logging/logback/console-appender.xml"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--重写了Spring Boot框架 org/springframework/boot/logging/logback/file-appender.xml 配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"TIME_FILE"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;FILE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;LOG_FILE&#125;<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;LOG_FILE&#125;.%d&#123;yyyy-MM-dd&#125;.%i<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--保留历史日志一个月的时间--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            Spring Boot默认情况下，日志文件10M时，会切分日志文件,这样设置日志文件会在100M时切分日志</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>10MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"CONSOLE"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"TIME_FILE"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    1、继承Spring boot logback设置（可以在appliaction.yml或者application.properties设置logging.*属性）</span></span><br><span class="line"><span class="comment">    2、重写了默认配置，设置日志文件大小在100MB时，按日期切分日志，切分后目录：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        my.2017-08-01.0   80MB</span></span><br><span class="line"><span class="comment">        my.2017-08-01.1   10MB</span></span><br><span class="line"><span class="comment">        my.2017-08-02.0   56MB</span></span><br><span class="line"><span class="comment">        my.2017-08-03.0   53MB</span></span><br><span class="line"><span class="comment">        ......</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>生产环境与开发环境配置<ul><li>application-dev.yml</li><li>application-pro.yml</li></ul></li></ul><h3 id="3-2-异常处理"><a href="#3-2-异常处理" class="headerlink" title="3.2 异常处理"></a>3.2 异常处理</h3><p><strong>1、定义错误页面</strong></p><ul><li>404</li><li>500</li><li>error</li></ul><p><strong>2、全局处理异常</strong></p><p>统一处理异常：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ControllerExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(ControllerExceptionHandler.class);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异常处理</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(&#123;Exception.class&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">handleException</span><span class="params">(HttpServletRequest request, Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        logger.error(<span class="string">"Request URL : &#123;&#125; , Exception : &#123;&#125;"</span>, request.getRequestURL(), e);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (AnnotationUtils.findAnnotation(e.getClass(), ResponseStatus.class) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mav.addObject(<span class="string">"url"</span>, request.getRequestURL());</span><br><span class="line">        mav.addObject(<span class="string">"exception"</span>, e);</span><br><span class="line">        mav.setViewName(<span class="string">"error/error"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>错误页面异常信息显示处理：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">"'&amp;lt;!--'"</span> <span class="attr">th:remove</span>=<span class="string">"tag"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">"'Failed Request URL : ' + $&#123;url&#125;"</span> <span class="attr">th:remove</span>=<span class="string">"tag"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">"'Exception message : ' + $&#123;exception.message&#125;"</span> <span class="attr">th:remove</span>=<span class="string">"tag"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:remove</span>=<span class="string">"tag"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">"st : $&#123;exception.stackTrace&#125;"</span> <span class="attr">th:remove</span>=<span class="string">"tag"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:utext</span>=<span class="string">"$&#123;st&#125;"</span> <span class="attr">th:remove</span>=<span class="string">"tag"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">"'--&amp;gt;'"</span> <span class="attr">th:remove</span>=<span class="string">"tag"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3、资源找不到异常</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ResponseStatus</span>(HttpStatus.NOT_FOUND)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NotFoundExcepiton</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotFoundExcepiton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotFoundExcepiton</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotFoundExcepiton</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-日志处理"><a href="#3-3-日志处理" class="headerlink" title="3.3 日志处理"></a>3.3 日志处理</h3><p><strong>1、记录日志内容</strong></p><ul><li>请求 url</li><li>访问者 ip</li><li>调用方法 classMethod</li><li>参数 args</li><li>返回内容</li></ul><p><strong>2、记录日志类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义切面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* com.imcoding.web.*.*(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span>(<span class="string">"log()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doBefore</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        String classMethod = joinPoint.getSignature().getDeclaringTypeName() + <span class="string">"."</span> + joinPoint.getSignature().getName();</span><br><span class="line">        ReqeustLog reqeustLog = <span class="keyword">new</span> ReqeustLog(</span><br><span class="line">                request.getRequestURL().toString(),</span><br><span class="line">                request.getRemoteAddr(),</span><br><span class="line">                classMethod,</span><br><span class="line">                joinPoint.getArgs()</span><br><span class="line">        );</span><br><span class="line">        logger.info(<span class="string">"Rquest  ----- &#123;&#125;"</span>,reqeustLog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span>(<span class="string">"log()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//logger.info("---------- doAfter 2 ----------");</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning</span>(returning = <span class="string">"result"</span>,pointcut = <span class="string">"log()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAtfertRturning</span><span class="params">(Object result)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"Return ------ &#123;&#125;"</span>,result );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ReqeustLog</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String url;</span><br><span class="line">        <span class="keyword">private</span> String ip;</span><br><span class="line">        <span class="keyword">private</span> String classMethod;</span><br><span class="line">        <span class="keyword">private</span> Object[] args;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ReqeustLog</span><span class="params">(String url, String ip, String classMethod, Object[] args)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.url = url;</span><br><span class="line">            <span class="keyword">this</span>.ip = ip;</span><br><span class="line">            <span class="keyword">this</span>.classMethod = classMethod;</span><br><span class="line">            <span class="keyword">this</span>.args = args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"ReqeustLog&#123;"</span> +</span><br><span class="line">                    <span class="string">"url='"</span> + url + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">", ip='"</span> + ip + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">", classMethod='"</span> + classMethod + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">", args="</span> + Arrays.toString(args) +</span><br><span class="line">                    <span class="string">'&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-页面处理"><a href="#3-4-页面处理" class="headerlink" title="3.4 页面处理"></a>3.4 页面处理</h3><p><strong>1、静态页面导入project</strong></p><p><strong>2、thymeleaf布局</strong></p><ul><li>定义fragment</li><li>使用fragment布局</li></ul><p><strong>3、错误页面美化</strong></p><p>4、设计与规范</p><h3 id="4-1-实体设计"><a href="#4-1-实体设计" class="headerlink" title="4.1 实体设计"></a>4.1 实体设计</h3><p><strong>实体类：</strong></p><ul><li>博客 Blog</li><li>博客分类 Type</li><li>博客标签 Tag</li><li>博客评论 Comment</li><li>用户 User</li></ul><p><strong>实体关系：</strong></p><p><img src="http://on91wk3hn.bkt.clouddn.com/17-10-14/87092095.jpg" alt></p><p><strong>评论类自关联关系：</strong></p><p><img src="http://on91wk3hn.bkt.clouddn.com/17-10-14/41296045.jpg" alt></p><p><strong>Blog类：</strong></p><p><img src="http://on91wk3hn.bkt.clouddn.com/17-10-14/38390041.jpg" alt></p><p><strong>Type类：</strong></p><p><img src="http://on91wk3hn.bkt.clouddn.com/17-10-14/22984471.jpg" alt></p><p><strong>Tag类：</strong></p><p><img src="http://on91wk3hn.bkt.clouddn.com/17-10-14/70860077.jpg" alt></p><p><strong>Comment类：</strong></p><p><img src="http://on91wk3hn.bkt.clouddn.com/17-10-14/77104424.jpg" alt></p><p><strong>User类：</strong></p><p><img src="http://on91wk3hn.bkt.clouddn.com/17-10-14/10367795.jpg" alt></p><h3 id="4-2-应用分层"><a href="#4-2-应用分层" class="headerlink" title="4.2 应用分层"></a>4.2 应用分层</h3><p><img src="http://on91wk3hn.bkt.clouddn.com/17-10-14/64528736.jpg" alt></p><h3 id="4-3-命名约定"><a href="#4-3-命名约定" class="headerlink" title="4.3 命名约定"></a>4.3 命名约定</h3><p><strong>Service/DAO层命名约定：</strong></p><ul><li>获取单个对象的方法用get做前缀。</li><li>获取多个对象的方法用list做前缀。</li><li>获取统计值的方法用count做前缀。</li><li>插入的方法用save(推荐)或insert做前缀。</li><li>删除的方法用remove(推荐)或delete做前缀。</li><li>修改的方法用update做前缀。</li></ul><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fk7m27hbn4j31ds0ycdnp.jpg" alt></p><h2 id="5、后台管理功能实现"><a href="#5、后台管理功能实现" class="headerlink" title="5、后台管理功能实现"></a>5、后台管理功能实现</h2><h3 id="5-1-登录"><a href="#5-1-登录" class="headerlink" title="5.1 登录"></a>5.1 登录</h3><p><strong>1、构建登录页面和后台管理首页</strong></p><p><strong>2、UserService和UserRepository</strong></p><p><strong>3、LoginController实现登录</strong></p><p><strong>4、MD5加密</strong></p><p><strong>5、登录拦截器</strong></p><h3 id="5-2-分类管理"><a href="#5-2-分类管理" class="headerlink" title="5.2 分类管理"></a>5.2 分类管理</h3><p><strong>1、分类管理页面</strong></p><p><strong>2、分类列表分页</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"content"</span>:[</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">123</span>,<span class="string">"title"</span>:<span class="string">"blog122"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">122</span>,<span class="string">"title"</span>:<span class="string">"blog121"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">121</span>,<span class="string">"title"</span>:<span class="string">"blog120"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">120</span>,<span class="string">"title"</span>:<span class="string">"blog119"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">119</span>,<span class="string">"title"</span>:<span class="string">"blog118"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">118</span>,<span class="string">"title"</span>:<span class="string">"blog117"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">117</span>,<span class="string">"title"</span>:<span class="string">"blog116"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">116</span>,<span class="string">"title"</span>:<span class="string">"blog115"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">115</span>,<span class="string">"title"</span>:<span class="string">"blog114"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">114</span>,<span class="string">"title"</span>:<span class="string">"blog113"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">113</span>,<span class="string">"title"</span>:<span class="string">"blog112"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">112</span>,<span class="string">"title"</span>:<span class="string">"blog111"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">111</span>,<span class="string">"title"</span>:<span class="string">"blog110"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">110</span>,<span class="string">"title"</span>:<span class="string">"blog109"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"id"</span>:<span class="number">109</span>,<span class="string">"title"</span>:<span class="string">"blog108"</span>,<span class="string">"content"</span>:<span class="string">"this is blog content"</span>&#125;],</span><br><span class="line">  <span class="string">"last"</span>:<span class="literal">false</span>,</span><br><span class="line">  <span class="string">"totalPages"</span>:<span class="number">9</span>,</span><br><span class="line">  <span class="string">"totalElements"</span>:<span class="number">123</span>,</span><br><span class="line">  <span class="string">"size"</span>:<span class="number">15</span>,</span><br><span class="line">  <span class="string">"number"</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="string">"first"</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="string">"sort"</span>:[&#123;</span><br><span class="line">    <span class="string">"direction"</span>:<span class="string">"DESC"</span>,</span><br><span class="line">    <span class="string">"property"</span>:<span class="string">"id"</span>,</span><br><span class="line">    <span class="string">"ignoreCase"</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="string">"nullHandling"</span>:<span class="string">"NATIVE"</span>,</span><br><span class="line">    <span class="string">"ascending"</span>:<span class="literal">false</span></span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="string">"numberOfElements"</span>:<span class="number">15</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、分类新增、修改、删除</strong></p><h3 id="5-3-标签管理"><a href="#5-3-标签管理" class="headerlink" title="5.3 标签管理"></a>5.3 标签管理</h3><h3 id="5-4-博客管理"><a href="#5-4-博客管理" class="headerlink" title="5.4 博客管理"></a>5.4 博客管理</h3><p><strong>1、博客分页查询</strong></p><p><strong>2、博客新增</strong></p><p><strong>3、博客修改</strong></p><p><strong>4、博客删除</strong></p><h2 id="6、前端展示功能实现"><a href="#6、前端展示功能实现" class="headerlink" title="6、前端展示功能实现"></a>6、前端展示功能实现</h2><h3 id="6-1-首页展示"><a href="#6-1-首页展示" class="headerlink" title="6.1 首页展示"></a>6.1 首页展示</h3><p><strong>1、博客列表</strong></p><p><strong>2、top分类</strong></p><p><strong>3、top标签</strong></p><p><strong>4、最新博客推荐</strong></p><p><strong>5、博客详情</strong></p><p><strong>1、Markdown 转换 HTML</strong></p><ul><li><a href="https://github.com/atlassian/commonmark-java" target="_blank" rel="noopener">commonmark-java  https://github.com/atlassian/commonmark-java</a></li><li>pom.xml引用commonmark和扩展插件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark-ext-heading-anchor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark-ext-gfm-tables<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2、评论功能</strong></p><ul><li>评论信息提交与回复功能</li><li>评论信息列表展示功能</li><li>管理员回复评论功能</li></ul><h3 id="6-2-分类页"><a href="#6-2-分类页" class="headerlink" title="6.2 分类页"></a>6.2 分类页</h3><h3 id="6-3-标签页"><a href="#6-3-标签页" class="headerlink" title="6.3 标签页"></a>6.3 标签页</h3><h3 id="6-4-归档页"><a href="#6-4-归档页" class="headerlink" title="6.4 归档页"></a>6.4 归档页</h3><h3 id="6-5-关于我"><a href="#6-5-关于我" class="headerlink" title="6.5 关于我"></a>6.5 关于我</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Spring-Boot开发小而美的个人博客&quot;&gt;&lt;a href=&quot;#Spring-Boot开发小而美的个人博客&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot开发小而美的个人博客&quot;&gt;&lt;/a&gt;Spring Boot开发小而美的个人博客&lt;/
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="http://yoursite.com/2019/09/23/hello-world/"/>
    <id>http://yoursite.com/2019/09/23/hello-world/</id>
    <published>2019-09-23T06:06:49.578Z</published>
    <updated>2019-09-30T12:49:15.368Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://picsum.photos/300/300" alt></p><p></p><p>　　我听说，有一种猫叫做雨猫。天气温暖时，它就变得蓬松毛绒绒的，像白云一样上浮，你可以拴着它，像放风筝一样走，它会变透明，阳光透得过它的身体。天气晦暗时它会变黑，坠在地上，满地乱跑，毛变得硬硬的，像刚刮过的胡茬一样。你得抱着它，等天气晴朗时，再把它放出去，就像风筝末梢放着一团棉花糖。</p><hr><p>　　我听说，有种青蛙，透明洁白，只吃茶叶。吃多之后，吐气如兰。冬天它便僵卧，张着大嘴，眠去一个季节。你往它肚里倒热水，水便成茶，馥郁芳香，可以倒在杯子里喝，香沁肺腑。有个女孩子，手头没有杯子，于是捧起青蛙，嘴对着嘴，把青蛙嘴当茶杯口。结果青蛙醒了，变成一白衣少年：“哪个公主吻了我？”</p><hr><a id="more" target="_blank"></a><p>　　我听说，有一种驯鹿，很爱长颈鹿的斑纹和气味，但是太矮，又碍于长颈鹿是哑巴，所以没法谈恋爱。于是它们就长起了杉树一样直拔云天的角，然后到处找一个人，在角的顶端造一个房子住着。每天，那个人负责在高树摘果子，送给长颈鹿吃，以促成驯鹿和长颈鹿的爱情——虽然见不到面，但灵魂相通的爱情。</p><hr><p>　　我听说，北方有一种松鼠，特别大，毛茸茸的，睡觉时喜欢摊开四肢，露出软绵绵的肚皮。你抓住一只，混熟了，就可以把它当床，睡在它的肚子上，用它的尾巴做被子。但它喜欢梦游，到处爬，所以你睡着前眼睛明明看见天花板的花纹，醒来时就可能看见松树枝、杉树枝、云、麻雀和松毛虫。</p><hr><p>　　我听说，有一种猫，特别怕冷，一遇到冷环境就全身长起蓬松松软绵绵的长毛，并且开始冬眠，怎么叫都不醒。冬天你把它挂在脖子上出门，就好像穿了件毛大衣。到了温暖的室内，它暖醒了，就喵一声跳下来，自己到炉子旁边去接着睡了。因为冬天很长，它在冬天基本是裘状，所以叫冬裘夏猫。</p><hr><p>　　我听说，有种野猪，睡一觉就长一层脂肪，起来跑一跑就练出一层肌肉，所以他身上肥瘦肥瘦，像夹心饼干。他爱去南方的海边泡澡，泡一身大粒子盐味，吹风，然后哼唧哼唧去温泉，一边蒸自己一边吃树叶子。你埋伏在温泉边，射倒它，能吃到现成的蒸火腿。你最好带蜂蜜，敷一遍再蒸，更好吃。</p><hr><p>　　我听说，以前有人喜欢在海蚌上写故事写诗。你走在海边，海蚌会跟你说：我身上有字，可以给你看噢，但有个条件，我不识字，你得念给我听。你答应了，海蚌就张开壳来，让你给它念故事。如果你看入神忘了继续念，或者企图摘抄剽窃，海蚌就会夹你一下；如果你念得好，海蚌就送你颗珍珠。</p><hr><p>　　我听说，南方有一种鸟，身材纤瘦，尾羽很长，善吟诗，平时看上去盈盈一握，却筋骨健壮。如果你和它混熟了，它就会把身体绷直，你可以握着它的腰，用它的嘴蘸墨、写字，画梅花、打印章时，还可以用它印个浅爪痕。可是它挑剔得很，墨质差，纸脏，字写得难看，或者句子毫无文采，它就会破口大骂：“居然用老娘写这么烂的文章！”</p><hr><p>我听说有种雪狐，极妩媚，皮毛柔滑。善学声音，爱恶作剧，喜在窗外学男主人女同学、女同事等声音，引女主人疑心吵架，引以为乐。被抓住后会要求：给你雪狐裘，放我走吧。若男主人不允，她便媚笑：原来是你舍不得我走啊嗯……女主人遂朝男主人双目圆睁：你留她干嘛，还不放走？心思又活络了嗯？！</p><hr><p>　　我听说，有种熊叫做云熊，其白如雪，其大若垂天之云。春天开始浮游，夏天吸取阳光。冬天，它随风在天空飘荡，到一个寒冷的地方，就开始下一团团的熊绒毛。熊绒可做大衣，闻得到夏天阳光的味道。熊绒落完，它也就飘下地来。你闻以蜂蜜，冬眠。到春天它长起了毛，就又变成云浮起来了。</p><hr><p>　　我听说有种蜗牛，寿命很长，以八千岁为春，以八千岁为秋。丈夫对妻子说，我要吻你一下，然后出门去买报纸。妻子就闭上眼，等了八天，吻到了，于是丈夫出门了。等他回来，妻子抱怨说：你这一走就是六百年，我好担心。丈夫说：哎呀，我是怕又过时了，站在那里花二百年把新闻看了嘛。</p><hr><p>　　我听说有种章鱼，善于下厨。你坐柜台后面，问它要三明治寿司刺身铁板烧咖啡茶涮锅烤串回锅肉，它舞起手臂们，切剔炒烹翻炸调撒料颠勺，又快又好，还能剩出三只手，一只负责收钱，两只和你打扑克解闷。但它开不起玩笑，偶尔它不小心手臂被铁板烫到，你可不能说“那我要这条章鱼烧！” 不然它就会舞起锅铲，任你是三头六臂也挡不住它四面八方朝你扔鱼丸。</p><hr><p>　　我听说有种虎鲸，很温柔，喜欢光，不潜游，但又怕晒。你在它背上铺沙子，张阳伞，它便喜欢你，任你在它背上住下，钓鱼、睡午觉、接吻、喝果汁。每天它张嘴吞许多小鱼，自己吃些，剩下的喷水送给你，于是你天天有新鲜刺身吃。偶然它也馋，愿意吃熟的，就会张嘴，要你抛给吃章鱼烧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://picsum.photos/300/300&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;　　我听说，有一种猫叫做雨猫。天气温暖时，它就变得蓬松毛绒绒的，像白云一样上浮，你可以拴着它，像放风筝一样走，它会变透明，阳光透得过它的身体。天气晦暗时它
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
